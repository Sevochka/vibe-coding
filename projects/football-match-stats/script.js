// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –º–∞—Ç—á–∞
const formatMatchTime = (minutes) => {
    if (minutes > 90) {
        return `${minutes}'`;
    }
    return `${minutes}'`;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
const getPositionName = (position) => {
    const positions = {
        'GOALKEEPER': '–í—Ä–∞—Ç–∞—Ä—å',
        'DEFENDER': '–ó–∞—â–∏—Ç–Ω–∏–∫',
        'MIDFIELDER': '–ü–æ–ª—É–∑–∞—â–∏—Ç–Ω–∏–∫',
        'FORWARD': '–ù–∞–ø–∞–¥–∞—é—â–∏–π'
    };
    return positions[position] || position;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–≥—Ä–æ–∫–∞
const createPlayerCard = (playerData) => {
    const { player, stat } = playerData;
    const card = document.createElement('div');
    card.className = 'player-card';
    
    card.innerHTML = `
        <img src="${player.logotype.url}" alt="${player.lastName}" class="player-photo">
        <div class="player-info">
            <div class="player-name">${player.firstName} ${player.lastName}</div>
            <div class="player-position">${getPositionName(player.fieldPosition)}</div>
            <div class="player-stats">
                ${stat.goalsScored > 0 ? `<span class="goals-count">‚öΩ ${stat.goalsScored}</span>` : ''}
                ${stat.assists > 0 ? `<span class="assists-count">üëü ${stat.assists}</span>` : ''}
                ${stat.yellowCards > 0 ? `<span class="yellow-card">üü® ${stat.yellowCards}</span>` : ''}
                ${stat.redCards > 0 ? `<span class="red-card">üü• ${stat.redCards}</span>` : ''}
            </div>
        </div>
    `;
    
    return card;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –≤ —Ç–∞–π–º–ª–∞–π–Ω–µ
const createTimelineEvent = (event) => {
    const timelineEvent = document.createElement('div');
    timelineEvent.className = 'timeline-event';
    
    const eventTime = formatMatchTime(event.value.matchTime);
    const team = event.value.team === 'HOME' ? '–ò–Ω—Ç–µ—Ä' : '–ë–∞—Ä—Å–µ–ª–æ–Ω–∞';
    let description = '';
    
    switch (event.type) {
        case 'SCORE_CHANGE':
            description = `<div class="event-team">${team}</div>
                         <div class="event-detail">–ì–æ–ª! –°—á—ë—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è ${event.value.homeScore}:${event.value.awayScore}</div>`;
            break;
        case 'SUBSTITUTION':
            description = `<div class="event-team">${team}</div>
                         <div class="event-detail">–ó–∞–º–µ–Ω–∞</div>`;
            break;
        default:
            description = `<div class="event-detail">–°–æ–±—ã—Ç–∏–µ –º–∞—Ç—á–∞</div>`;
    }
    
    timelineEvent.innerHTML = `
        <div class="event-time">${eventTime}</div>
        <div class="event-content">
            <div class="event-description">${description}</div>
        </div>
    `;
    
    return timelineEvent;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Å—Ç–∞–≤–æ–≤
const renderSquads = () => {
    const homeSquad = document.getElementById('home-squad');
    const awaySquad = document.getElementById('away-squad');
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    homeSquad.innerHTML = '';
    awaySquad.innerHTML = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤ –¥–æ–º–∞—à–Ω–µ–π –∫–æ–º–∞–Ω–¥—ã
    matchData.home.lineup.forEach(player => {
        homeSquad.appendChild(createPlayerCard(player));
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤ –≥–æ—Å—Ç–µ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã
    matchData.away.lineup.forEach(player => {
        awaySquad.appendChild(createPlayerCard(player));
    });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏
const renderTimeline = () => {
    const timelineContainer = document.querySelector('.timeline-container');
    timelineContainer.innerHTML = '';
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫ –ø–µ—Ä–≤–æ–º—É)
    const sortedEvents = [...matchData.events].sort((a, b) => {
        return new Date(b.time) - new Date(a.time);
    });
    
    sortedEvents.forEach(event => {
        timelineContainer.appendChild(createTimelineEvent(event));
    });
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
const initTabs = () => {
    const tabs = document.querySelectorAll('.tab-button');
    const panes = document.querySelectorAll('.tab-pane');
    
    tabs.forEach(tab => {
        tab.addEventListener('click', () => {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
            tabs.forEach(t => t.classList.remove('active'));
            panes.forEach(p => p.classList.remove('active'));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–µ
            tab.classList.add('active');
            const pane = document.getElementById(tab.dataset.tab);
            pane.classList.add('active');
        });
    });
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    renderSquads();
    renderTimeline();
    initTabs();
}); 